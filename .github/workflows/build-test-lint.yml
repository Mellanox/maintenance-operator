name: "Build, Test, Lint"
on: [push, pull_request]
jobs:
  build:
    strategy:
      matrix:
        go-version: [1.22.x]
        goarch: [amd64]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go matrix
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: Build
        env:
          GOARCH: ${{ matrix.goarch }}
          GOOS: ${{ matrix.goos }}
        run: make build
  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: Lint
        run: make lint
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: Run tests
        run: make unit-test
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build image
        run: make docker-build
  go-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
      # if this fails, run go mod tidy
      - name: Check if module files are consistent with code
        run: go mod tidy && git diff --exit-code
      # if this fails, run make generate; make manifests and commit changes
      - name: Check if generated are up to date
        run: make generate && make manifests && git diff --exit-code
  coverage:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
      - name: Generate coverage report
        run: make unit-test
      - name: Upload to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: cover.out
  e2e-test:
    runs-on: ubuntu-latest
    needs: [test, build-image]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: prepare test k8s cluster
        run: make test-env-e2e
      - name: build and deploy operator
        run: make deploy-operator-e2e
      - name: run e2e tests
        run: make test-e2e
      - name: upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-artifacts
          path: ./artifacts
      - name: cleanup
        if: always()
        run: make clean-test-env-e2e
